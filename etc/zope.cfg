# Zope Config
# ===========
#
# Set up of Zope for the DMCC Backend
#
# Copyright 2012â€“2020 California Institute of Technology. ALL RIGHTS
# RESERVED. U.S. Government Sponsorship acknowledged.

# Zope
# ----
#
# The DMCC app server is itself a Zope application.
[zope]
recipe           = plone.recipe.zope2instance
debug-mode       = off
environment-vars = TZ UTC
http-address     = ${ports:zope}
ip-address       = ${interfaces:zope}
password         = admin
shared-blob      = on
user             = ${:username}:${:password}
username         = admin
verbose-security = off
zeo-client       = off
zodb-cache-size  = 12000
zserver-threads  = 5
eggs =
    pillow
    Plone
    ${plone-policies:eggs}


# Zope Debugging Instance
# -----------------------
#
# Another instance of Zope, but with debugging support
[zope-debug]
<= zope
debug-mode       = on
http-address     = ${ports:zope-debug}
ip-address       =
verbose-security = on
zeo-client       = off


# Zope Backup
# -----------
#
# Database backup, snapshot, and restore utilities for Zope app server
[zope-backup]
recipe = collective.recipe.backup
blob_storage = ${buildout:directory}/var/blobstorage
backup_blobs = true


# Repozo
# ------
#
# The actual backup engine used by zope-backup.
[repozo]
recipe  = zc.recipe.egg
eggs    = ZODB3
scripts = repozo


# Zope Backup/Restore
# -------------------
#
# Backup & restore scripts for Zope & ZEO
[backup]
recipe = collective.recipe.backup
blob_storage = ${buildout:directory}/var/blobstorage


# Omelette
# --------
#
# Greppable eggs
[omelette]
recipe = collective.recipe.omelette
eggs = ${eggs-list:eggs}


# Test
# ----
#
# Test runner for Python components.
[test]
recipe = collective.xmltestreport
eggs =
    ${eggs-list:eggs}
    Pillow
    plone.testing
    plone.app.testing
    plone.app.robotframework
    unittest2
    plone.app.upgrade
defaults = ['--auto-color', '--auto-progress', '--verbose']


# Python
# ------
#
# Generation of a Python interpreter with all the Zope eggs "baked in"
[python]
recipe = zc.recipe.egg:scripts
interpreter = python
scripts = python
eggs = ${test:eggs}


# Project Eggs List
# -----------------
#
# What eggs are being developed in this project. TODO: Do we want the [test] extras?
[eggs-list]
recipe = mr.scripty
eggs = return '\n'.join(self.buildout['sources'].keys())


# Repozo
# ------
#
# The plone.recipe.zeoserver recipe generates a repozo script so you can work
# with ZODB backups.  But you need to do that when you're developing and
# running Zope standalone without a ZEO server.  The
# plone.recipe.zope2instance recipe claims it generated a repozo script (back
# in version 0.3) but it definitely doesn't now.  So, we use this little
# recipe to generate one.
[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

